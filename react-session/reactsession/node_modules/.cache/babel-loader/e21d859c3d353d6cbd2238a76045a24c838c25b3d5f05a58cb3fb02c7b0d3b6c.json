{"ast":null,"code":"var _jsxFileName = \"/Users/ju/Desktop/react-session/react-session/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport TimerDisplay from \"./TimerDisplay\";\nimport TimerButtons from \"./TimerButtons\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [seconds, setSeconds] = useState(0);\n  const [isRunning, setIsRunning] = useState(false); // 타이머 실행 여부\n\n  // 자동 증가 타이머\n  useEffect(() => {\n    let interval = null;\n    if (isRunning) {\n      interval = setInterval(() => {\n        setSeconds(prev => prev + 1); // 1초마다 시간 증가\n      }, 1000);\n    } else {\n      clearInterval(interval); // 멈췄을 때 타이머 제거\n    }\n\n    // cleanup: 컴포넌트가 unmount되거나 다시 실행될 때 정리\n    return () => clearInterval(interval);\n  }, [isRunning]);\n  const handleStart = () => setIsRunning(true);\n  const handleStop = () => setIsRunning(false);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(TimerDisplay, {\n      seconds: seconds\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TimerButtons, {\n      onStart: handleStart,\n      onStop: handleStop\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"F4AdTKo2IKqs+4J+hL9tR+khH0g=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","TimerDisplay","TimerButtons","jsxDEV","_jsxDEV","App","_s","seconds","setSeconds","isRunning","setIsRunning","interval","setInterval","prev","clearInterval","handleStart","handleStop","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onStart","onStop","_c","$RefreshReg$"],"sources":["/Users/ju/Desktop/react-session/react-session/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport TimerDisplay from \"./TimerDisplay\";\nimport TimerButtons from \"./TimerButtons\";\n\nfunction App() {\n  const [seconds, setSeconds] = useState(0);\n  const [isRunning, setIsRunning] = useState(false); // 타이머 실행 여부\n\n  // 자동 증가 타이머\n  useEffect(() => {\n    let interval = null;\n\n    if (isRunning) {\n      interval = setInterval(() => {\n        setSeconds(prev => prev + 1); // 1초마다 시간 증가\n      }, 1000);\n    } else {\n      clearInterval(interval); // 멈췄을 때 타이머 제거\n    }\n\n    // cleanup: 컴포넌트가 unmount되거나 다시 실행될 때 정리\n    return () => clearInterval(interval);\n  }, [isRunning]);\n\n  const handleStart = () => setIsRunning(true);\n  const handleStop = () => setIsRunning(false);\n\n  return (\n    <div className=\"container\">\n      <TimerDisplay seconds={seconds} />\n      <TimerButtons onStart={handleStart} onStop={handleStop} />\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAO,WAAW;AAClB,OAAOC,YAAY,MAAM,gBAAgB;AACzC,OAAOC,YAAY,MAAM,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1C,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,CAAC,CAAC;EACzC,MAAM,CAACU,SAAS,EAAEC,YAAY,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;;EAEnD;EACAC,SAAS,CAAC,MAAM;IACd,IAAIW,QAAQ,GAAG,IAAI;IAEnB,IAAIF,SAAS,EAAE;MACbE,QAAQ,GAAGC,WAAW,CAAC,MAAM;QAC3BJ,UAAU,CAACK,IAAI,IAAIA,IAAI,GAAG,CAAC,CAAC,CAAC,CAAC;MAChC,CAAC,EAAE,IAAI,CAAC;IACV,CAAC,MAAM;MACLC,aAAa,CAACH,QAAQ,CAAC,CAAC,CAAC;IAC3B;;IAEA;IACA,OAAO,MAAMG,aAAa,CAACH,QAAQ,CAAC;EACtC,CAAC,EAAE,CAACF,SAAS,CAAC,CAAC;EAEf,MAAMM,WAAW,GAAGA,CAAA,KAAML,YAAY,CAAC,IAAI,CAAC;EAC5C,MAAMM,UAAU,GAAGA,CAAA,KAAMN,YAAY,CAAC,KAAK,CAAC;EAE5C,oBACEN,OAAA;IAAKa,SAAS,EAAC,WAAW;IAAAC,QAAA,gBACxBd,OAAA,CAACH,YAAY;MAACM,OAAO,EAAEA;IAAQ;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAClClB,OAAA,CAACF,YAAY;MAACqB,OAAO,EAAER,WAAY;MAACS,MAAM,EAAER;IAAW;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACvD,CAAC;AAEV;AAAChB,EAAA,CA7BQD,GAAG;AAAAoB,EAAA,GAAHpB,GAAG;AA+BZ,eAAeA,GAAG;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}