{"ast":null,"code":"var _jsxFileName = \"/Users/ju/Desktop/react-session/react-session/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport TimerDisplay from \"./TimerDisplay\";\nimport TimerButtons from \"./TimerButtons\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [seconds, setSeconds] = useState(0);\n  const [isRunning, setIsRunning] = useState(false); // 타이머 상태 저장\n\n  // 자동 증가 타이머\n  useEffect(() => {\n    let interval = null;\n    if (isRunning) {\n      //타이머를 시작했을때\n      interval = setInterval(() => {\n        setSeconds(prev => {\n          if (prev == 20) {\n            clearInterval(interval);\n            setIsRunning(false);\n            alert('20초가 지났습니다!');\n            return prev;\n          }\n          return prev + 1; //아직 20초가 안됐을때는 1초 증가\n        }); // 1초마다 시간 증가\n      }, 1000);\n    } else {\n      //멈춤을 눌렀을때\n      clearInterval(interval); // 멈췄을 때 타이머 제거\n    }\n\n    // cleanup: 컴포넌트가 unmount되거나 다시 실행될 때 정리\n    return () => clearInterval(interval);\n  }, [isRunning]);\n  const handleStart = () => setIsRunning(true);\n  const handleStop = () => setIsRunning(false);\n  const handleReset = () => {\n    setIsRunning(false);\n    setSeconds(0);\n  };\n  //const handleReset= () => \n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(TimerDisplay, {\n      seconds: seconds\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TimerButtons, {\n      onStart: handleStart,\n      onStop: handleStop,\n      onReset: handleReset\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"F4AdTKo2IKqs+4J+hL9tR+khH0g=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","TimerDisplay","TimerButtons","jsxDEV","_jsxDEV","App","_s","seconds","setSeconds","isRunning","setIsRunning","interval","setInterval","prev","clearInterval","alert","handleStart","handleStop","handleReset","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onStart","onStop","onReset","_c","$RefreshReg$"],"sources":["/Users/ju/Desktop/react-session/react-session/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport TimerDisplay from \"./TimerDisplay\";\nimport TimerButtons from \"./TimerButtons\";\n\nfunction App() {\n  const [seconds, setSeconds] = useState(0);\n  const [isRunning, setIsRunning] = useState(false); // 타이머 상태 저장\n\n  // 자동 증가 타이머\n  useEffect(() => {\n    let interval = null;\n\n    if (isRunning) { //타이머를 시작했을때\n      interval = setInterval(() => {\n        setSeconds(prev => {\n          if(prev == 20) {\n            clearInterval(interval);\n            setIsRunning(false);\n            alert('20초가 지났습니다!');\n            return prev;\n          }\n          return prev + 1; //아직 20초가 안됐을때는 1초 증가\n        }); // 1초마다 시간 증가\n      }, 1000);\n    } else { //멈춤을 눌렀을때\n      clearInterval(interval); // 멈췄을 때 타이머 제거\n    }\n\n    // cleanup: 컴포넌트가 unmount되거나 다시 실행될 때 정리\n    return () => clearInterval(interval);\n  }, [isRunning]);\n\n  const handleStart = () => setIsRunning(true);\n  const handleStop = () => setIsRunning(false);\n  const handleReset = () => {\n    setIsRunning(false);\n    setSeconds(0);\n  }\n  //const handleReset= () => \n\n  return (\n    <div className=\"container\">\n      <TimerDisplay seconds={seconds} />\n      <TimerButtons onStart={handleStart} onStop={handleStop} onReset={handleReset} />\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAO,WAAW;AAClB,OAAOC,YAAY,MAAM,gBAAgB;AACzC,OAAOC,YAAY,MAAM,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1C,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,CAAC,CAAC;EACzC,MAAM,CAACU,SAAS,EAAEC,YAAY,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;;EAEnD;EACAC,SAAS,CAAC,MAAM;IACd,IAAIW,QAAQ,GAAG,IAAI;IAEnB,IAAIF,SAAS,EAAE;MAAE;MACfE,QAAQ,GAAGC,WAAW,CAAC,MAAM;QAC3BJ,UAAU,CAACK,IAAI,IAAI;UACjB,IAAGA,IAAI,IAAI,EAAE,EAAE;YACbC,aAAa,CAACH,QAAQ,CAAC;YACvBD,YAAY,CAAC,KAAK,CAAC;YACnBK,KAAK,CAAC,aAAa,CAAC;YACpB,OAAOF,IAAI;UACb;UACA,OAAOA,IAAI,GAAG,CAAC,CAAC,CAAC;QACnB,CAAC,CAAC,CAAC,CAAC;MACN,CAAC,EAAE,IAAI,CAAC;IACV,CAAC,MAAM;MAAE;MACPC,aAAa,CAACH,QAAQ,CAAC,CAAC,CAAC;IAC3B;;IAEA;IACA,OAAO,MAAMG,aAAa,CAACH,QAAQ,CAAC;EACtC,CAAC,EAAE,CAACF,SAAS,CAAC,CAAC;EAEf,MAAMO,WAAW,GAAGA,CAAA,KAAMN,YAAY,CAAC,IAAI,CAAC;EAC5C,MAAMO,UAAU,GAAGA,CAAA,KAAMP,YAAY,CAAC,KAAK,CAAC;EAC5C,MAAMQ,WAAW,GAAGA,CAAA,KAAM;IACxBR,YAAY,CAAC,KAAK,CAAC;IACnBF,UAAU,CAAC,CAAC,CAAC;EACf,CAAC;EACD;;EAEA,oBACEJ,OAAA;IAAKe,SAAS,EAAC,WAAW;IAAAC,QAAA,gBACxBhB,OAAA,CAACH,YAAY;MAACM,OAAO,EAAEA;IAAQ;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAClCpB,OAAA,CAACF,YAAY;MAACuB,OAAO,EAAET,WAAY;MAACU,MAAM,EAAET,UAAW;MAACU,OAAO,EAAET;IAAY;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC7E,CAAC;AAEV;AAAClB,EAAA,CA1CQD,GAAG;AAAAuB,EAAA,GAAHvB,GAAG;AA4CZ,eAAeA,GAAG;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}